{"version":3,"file":"bundle.umd.js","sources":["bundle.esm.js"],"sourcesContent":["import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { cloneDeep, isEqual, tryFunctionOrLogError, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, assign, getDefaultValues, getMutationDefinition, hasClientExports, graphQLResultHasError, getQueryDefinition, getOperationDefinition, getOperationName, removeConnectionDirectiveFromDocument } from 'apollo-utilities';\nimport { Observable as Observable$1, ApolloLink, execute } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { DedupLink } from 'apollo-link-dedup';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        _this.queryManager = queryManager;\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError\n                    ? undefined\n                    : this.lastResult\n                        ? this.lastResult.data\n                        : undefined,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: undefined,\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        if (queryStoreValue && queryStoreValue.variables) {\n            this.options.variables = Object.assign({}, this.options.variables, queryStoreValue.variables);\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === NetworkStatus.loading;\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n        }\n        var result = {\n            data: data,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            this.lastResult = __assign({}, result, { stale: false });\n            this.lastResultSnapshot = cloneDeep(this.lastResult);\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n            .then(function (result) { return result; });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, FetchType.normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (isEqual(newVariables, this.variables) && !tryFetch) {\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return result; });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            this.queryManager.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.lastResultSnapshot = cloneDeep(result);\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(Observable));\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only') : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            !isEqual(previousQuery.document, query.document)) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? NetworkStatus.ready\n            : NetworkStatus.loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            res[key] = __assign({}, _this.store[key], { networkStatus: NetworkStatus.loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign({}, remoteResult, { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in query but no client resolvers were specified. ' +\n                'You can now pass apollo-link-state resolvers to the ApolloClient constructor.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign({}, context, { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign({}, variables, data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.shouldForceResolver = function (field) {\n        return this.shouldForceResolvers(field);\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign({}, context, { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolver(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.queryIdsByName = {};\n        this.pollingInfoByQueryId = new Map();\n        this.nextPoll = null;\n        this.link = link;\n        this.deduplicator = ApolloLink.from([new DedupLink(), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new Error('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, cache, generateUpdateQueriesInfo, updatedVariables, _f;\n            var _this = this;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache') : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n                        mutationId = this.generateQueryId();\n                        cache = this.dataStore.getCache();\n                        (mutation = cache.transformDocument(mutation)),\n                            (variables = assign({}, getDefaultValues(getMutationDefinition(mutation)), variables));\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                                        ret[queryId] = {\n                                            updater: updateQueriesByName[queryName],\n                                            query: _this.queryStore.get(queryId),\n                                        };\n                                    });\n                                });\n                            }\n                            return ret;\n                        };\n                        if (!hasClientExports(mutation)) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        _f = _g.sent();\n                        return [3, 3];\n                    case 2:\n                        _f = variables;\n                        _g.label = 3;\n                    case 3:\n                        updatedVariables = _f;\n                        this.mutationStore.initMutation(mutationId, mutation, updatedVariables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: updatedVariables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                var operation = _this.buildOperationForLink(mutation, updatedVariables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n                                var completeMutation = function () {\n                                    if (error) {\n                                        _this.mutationStore.markMutationError(mutationId, error);\n                                    }\n                                    _this.dataStore.markMutationComplete({\n                                        mutationId: mutationId,\n                                        optimisticResponse: optimisticResponse,\n                                    });\n                                    _this.broadcastQueries();\n                                    if (error) {\n                                        return Promise.reject(error);\n                                    }\n                                    if (typeof refetchQueries === 'function') {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    var refetchQueryPromises = [];\n                                    for (var _i = 0, refetchQueries_1 = refetchQueries; _i < refetchQueries_1.length; _i++) {\n                                        var refetchQuery = refetchQueries_1[_i];\n                                        if (typeof refetchQuery === 'string') {\n                                            var promise = _this.refetchQueryByName(refetchQuery);\n                                            if (promise) {\n                                                refetchQueryPromises.push(promise);\n                                            }\n                                            continue;\n                                        }\n                                        var queryOptions = {\n                                            query: refetchQuery.query,\n                                            variables: refetchQuery.variables,\n                                            fetchPolicy: 'network-only',\n                                        };\n                                        if (refetchQuery.context) {\n                                            queryOptions.context = refetchQuery.context;\n                                        }\n                                        refetchQueryPromises.push(_this.query(queryOptions));\n                                    }\n                                    return Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                        _this.setQuery(mutationId, function () { return ({ document: null }); });\n                                        if (errorPolicy === 'ignore' &&\n                                            storeResult &&\n                                            graphQLResultHasError(storeResult)) {\n                                            delete storeResult.errors;\n                                        }\n                                        return storeResult;\n                                    });\n                                };\n                                var clientQuery = _this.localState.clientQuery(operation.query);\n                                var serverQuery = _this.localState.serverQuery(operation.query);\n                                if (serverQuery) {\n                                    operation.query = serverQuery;\n                                }\n                                var obs = serverQuery\n                                    ? execute(_this.link, operation)\n                                    : Observable.of({\n                                        data: {},\n                                    });\n                                var self = _this;\n                                var complete = false;\n                                var handlingNext = false;\n                                obs.subscribe({\n                                    next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                                        var updatedResult, context, variables;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    handlingNext = true;\n                                                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                                        handlingNext = false;\n                                                        error = new ApolloError({\n                                                            graphQLErrors: result.errors,\n                                                        });\n                                                        return [2];\n                                                    }\n                                                    self.mutationStore.markMutationResult(mutationId);\n                                                    updatedResult = result;\n                                                    context = operation.context, variables = operation.variables;\n                                                    if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                                    return [4, self.localState\n                                                            .runResolvers({\n                                                            document: clientQuery,\n                                                            remoteResult: result,\n                                                            context: context,\n                                                            variables: variables,\n                                                        })\n                                                            .catch(function (error) {\n                                                            handlingNext = false;\n                                                            reject(error);\n                                                            return result;\n                                                        })];\n                                                case 1:\n                                                    updatedResult = _a.sent();\n                                                    _a.label = 2;\n                                                case 2:\n                                                    if (fetchPolicy !== 'no-cache') {\n                                                        self.dataStore.markMutationResult({\n                                                            mutationId: mutationId,\n                                                            result: updatedResult,\n                                                            document: mutation,\n                                                            variables: updatedVariables || {},\n                                                            updateQueries: generateUpdateQueriesInfo(),\n                                                            update: updateWithProxyFn,\n                                                        });\n                                                    }\n                                                    storeResult = updatedResult;\n                                                    handlingNext = false;\n                                                    if (complete) {\n                                                        completeMutation().then(resolve, reject);\n                                                    }\n                                                    return [2];\n                                            }\n                                        });\n                                    }); },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (!handlingNext) {\n                                            completeMutation().then(resolve, reject);\n                                        }\n                                        complete = true;\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, variables, _b, metadata, _c, fetchPolicy, _d, context, cache, query, updatedVariables, _e, updatedOptions, storeResult, needToFetch, _f, complete, result, shouldFetch, requestId, cancel, shouldDispatchClientResult, networkResult;\n            var _this = this;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c, _d = options.context, context = _d === void 0 ? {} : _d;\n                        cache = this.dataStore.getCache();\n                        query = cache.transformDocument(options.query);\n                        if (!hasClientExports(query)) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        _e = _g.sent();\n                        return [3, 3];\n                    case 2:\n                        _e = variables;\n                        _g.label = 3;\n                    case 3:\n                        updatedVariables = _e;\n                        updatedOptions = __assign({}, options, { variables: updatedVariables });\n                        needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        if (fetchType !== FetchType.refetch &&\n                            fetchPolicy !== 'network-only' &&\n                            fetchPolicy !== 'no-cache') {\n                            _f = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: updatedVariables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _f.complete, result = _f.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.generateRequestId();\n                        cancel = this.updateQueryWatch(queryId, query, updatedOptions);\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(true, fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: updatedVariables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n                        if (shouldDispatchClientResult) {\n                            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                            this.invalidate(true, queryId, fetchMoreForQueryId);\n                            this.broadcastQueries(this.localState.shouldForceResolvers(query));\n                        }\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: updatedOptions,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                                    if (requestId >= (lastRequestId || 1)) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            else {\n                                networkResult.catch(function () { });\n                            }\n                        }\n                        return [2, Promise.resolve({ data: storeResult })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData, forceResolvers) { return __awaiter(_this, void 0, void 0, function () {\n            var observableQuery, fetchPolicy, errorPolicy, lastResult, lastError, shouldNotifyIfLoading, networkStatusChanged, errorStatusChanged, apolloError_1, data, isMissing, document_1, readResult, resultFromStore, query, variables, context, updatedResult, e_1, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.invalidate(false, queryId);\n                        if (!queryStoreValue)\n                            return [2];\n                        observableQuery = this.getQuery(queryId).observableQuery;\n                        fetchPolicy = observableQuery\n                            ? observableQuery.options.fetchPolicy\n                            : options.fetchPolicy;\n                        if (fetchPolicy === 'standby')\n                            return [2];\n                        errorPolicy = observableQuery\n                            ? observableQuery.options.errorPolicy\n                            : options.errorPolicy;\n                        lastResult = observableQuery\n                            ? observableQuery.getLastResult()\n                            : null;\n                        lastError = observableQuery ? observableQuery.getLastError() : null;\n                        shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                            fetchPolicy === 'cache-only' ||\n                            fetchPolicy === 'cache-and-network';\n                        networkStatusChanged = Boolean(lastResult &&\n                            queryStoreValue.networkStatus !== lastResult.networkStatus);\n                        errorStatusChanged = errorPolicy &&\n                            (lastError && lastError.graphQLErrors) !==\n                                queryStoreValue.graphQLErrors &&\n                            errorPolicy !== 'none';\n                        if (!(!isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n                            (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                            shouldNotifyIfLoading)) return [3, 8];\n                        if (((!errorPolicy || errorPolicy === 'none') &&\n                            queryStoreValue.graphQLErrors &&\n                            queryStoreValue.graphQLErrors.length > 0) ||\n                            queryStoreValue.networkError) {\n                            apolloError_1 = new ApolloError({\n                                graphQLErrors: queryStoreValue.graphQLErrors,\n                                networkError: queryStoreValue.networkError,\n                            });\n                            previouslyHadError = true;\n                            if (observer.error) {\n                                try {\n                                    observer.error(apolloError_1);\n                                }\n                                catch (e) {\n                                    setTimeout(function () {\n                                        throw e;\n                                    }, 0);\n                                }\n                            }\n                            else {\n                                setTimeout(function () {\n                                    throw apolloError_1;\n                                }, 0);\n                                if (process.env.NODE_ENV !== 'production') {\n                                    console.info('An unhandled error was thrown because no error handler is registered ' +\n                                        'for the query ' +\n                                        JSON.stringify(queryStoreValue.document));\n                                }\n                            }\n                            return [2];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, , 8]);\n                        data = void 0;\n                        isMissing = void 0;\n                        if (newData) {\n                            if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                                this.setQuery(queryId, function () { return ({ newData: null }); });\n                            }\n                            data = newData.result;\n                            isMissing = !newData.complete || false;\n                        }\n                        else {\n                            if (lastResult && lastResult.data && !errorStatusChanged) {\n                                data = lastResult.data;\n                                isMissing = false;\n                            }\n                            else {\n                                document_1 = this.getQuery(queryId).document;\n                                readResult = this.dataStore.getCache().diff({\n                                    query: document_1,\n                                    variables: queryStoreValue.previousVariables ||\n                                        queryStoreValue.variables,\n                                    optimistic: true,\n                                });\n                                data = readResult.result;\n                                isMissing = !readResult.complete;\n                            }\n                        }\n                        resultFromStore = void 0;\n                        if (isMissing && fetchPolicy !== 'cache-only') {\n                            resultFromStore = {\n                                data: lastResult && lastResult.data,\n                                loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                                networkStatus: queryStoreValue.networkStatus,\n                                stale: true,\n                            };\n                        }\n                        else {\n                            resultFromStore = {\n                                data: data,\n                                loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                                networkStatus: queryStoreValue.networkStatus,\n                                stale: false,\n                            };\n                        }\n                        if (errorPolicy === 'all' &&\n                            queryStoreValue.graphQLErrors &&\n                            queryStoreValue.graphQLErrors.length > 0) {\n                            resultFromStore.errors = queryStoreValue.graphQLErrors;\n                        }\n                        if (!observer.next) return [3, 6];\n                        if (!(previouslyHadError ||\n                            !observableQuery ||\n                            observableQuery.isDifferentFromLastResult(resultFromStore))) return [3, 6];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        if (!forceResolvers) return [3, 4];\n                        query = options.query, variables = options.variables, context = options.context;\n                        return [4, this.localState.runResolvers({\n                                document: query,\n                                remoteResult: resultFromStore,\n                                context: context,\n                                variables: variables,\n                                onlyRunForcedResolvers: forceResolvers,\n                            })];\n                    case 3:\n                        updatedResult = _a.sent();\n                        resultFromStore = __assign({}, resultFromStore, updatedResult);\n                        _a.label = 4;\n                    case 4:\n                        observer.next(resultFromStore);\n                        return [3, 6];\n                    case 5:\n                        e_1 = _a.sent();\n                        setTimeout(function () {\n                            throw e_1;\n                        }, 0);\n                        return [3, 6];\n                    case 6:\n                        previouslyHadError = false;\n                        return [3, 8];\n                    case 7:\n                        error_1 = _a.sent();\n                        previouslyHadError = true;\n                        if (observer.error)\n                            observer.error(new ApolloError({ networkError: error_1 }));\n                        return [2];\n                    case 8: return [2];\n                }\n            });\n        }); };\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby') : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        var queryDefinition = getQueryDefinition(options.query);\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = getDefaultValues(queryDefinition);\n            options.variables = assign({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document') : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidated: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        var queryDef = getQueryDefinition(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = getQueryDefinition(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var isCacheEnabled = !(options.fetchPolicy && options.fetchPolicy === 'no-cache');\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = assign({}, getDefaultValues(getOperationDefinition(query)), options.variables);\n        var updatedVariables = variables;\n        var sub;\n        var observers = [];\n        var clientQuery = this.localState.clientQuery(transformedDoc);\n        return new Observable(function (observer) {\n            observers.push(observer);\n            if (observers.length === 1) {\n                var activeNextCalls_1 = 0;\n                var complete_1 = false;\n                var handler_1 = {\n                    next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                        var updatedResult;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    activeNextCalls_1 += 1;\n                                    updatedResult = result;\n                                    if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                    return [4, this.localState.runResolvers({\n                                            document: clientQuery,\n                                            remoteResult: result,\n                                            context: {},\n                                            variables: updatedVariables,\n                                        })];\n                                case 1:\n                                    updatedResult = _a.sent();\n                                    _a.label = 2;\n                                case 2:\n                                    if (isCacheEnabled) {\n                                        this.dataStore.markSubscriptionResult(updatedResult, transformedDoc, updatedVariables);\n                                        this.broadcastQueries();\n                                    }\n                                    observers.forEach(function (obs) {\n                                        if (graphQLResultHasError(updatedResult) && obs.error) {\n                                            obs.error(new ApolloError({\n                                                graphQLErrors: updatedResult.errors,\n                                            }));\n                                        }\n                                        else if (obs.next) {\n                                            obs.next(updatedResult);\n                                        }\n                                        activeNextCalls_1 -= 1;\n                                    });\n                                    if (activeNextCalls_1 === 0 && complete_1) {\n                                        handler_1.complete();\n                                    }\n                                    return [2];\n                            }\n                        });\n                    }); },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error) {\n                                obs.error(error);\n                            }\n                        });\n                    },\n                    complete: function () {\n                        if (activeNextCalls_1 === 0) {\n                            observers.forEach(function (obs) {\n                                if (obs.complete) {\n                                    obs.complete();\n                                }\n                            });\n                        }\n                        complete_1 = true;\n                    }\n                };\n                (function () { return __awaiter(_this, void 0, void 0, function () {\n                    var updatedVariables, _a, serverQuery, operation;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                if (!hasClientExports(transformedDoc)) return [3, 2];\n                                return [4, this.localState.addExportedVariables(transformedDoc, variables)];\n                            case 1:\n                                _a = _b.sent();\n                                return [3, 3];\n                            case 2:\n                                _a = variables;\n                                _b.label = 3;\n                            case 3:\n                                updatedVariables = _a;\n                                serverQuery = this.localState.serverQuery(transformedDoc);\n                                if (serverQuery) {\n                                    operation = this.buildOperationForLink(serverQuery, updatedVariables);\n                                    sub = execute(this.link, operation).subscribe(handler_1);\n                                }\n                                else {\n                                    sub = Observable.of({ data: {} }).subscribe(handler_1);\n                                }\n                                return [2];\n                        }\n                    });\n                }); })();\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        else if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        else {\n            try {\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                }) || undefined;\n                return { data: data, partial: false };\n            }\n            catch (e) {\n                return { data: undefined, partial: true };\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function (forceResolvers) {\n        var _this = this;\n        if (forceResolvers === void 0) { forceResolvers = false; }\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData, forceResolvers);\n            });\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var obs;\n            var updatedContext = {};\n            var clientQuery = _this.localState.clientQuery(document);\n            var serverQuery = _this.localState.serverQuery(document);\n            if (serverQuery) {\n                var operation = _this.buildOperationForLink(serverQuery, variables, __assign({}, context, { forceFetch: !_this.queryDeduplication }));\n                updatedContext = operation.context;\n                obs = execute(_this.deduplicator, operation);\n            }\n            else {\n                updatedContext = _this.prepareContext(context);\n                obs = Observable.of({ data: {} });\n            }\n            _this.fetchQueryRejectFns.set(\"fetchRequest:\" + queryId, reject);\n            var complete = false;\n            var handlingNext = true;\n            var subscriber = {\n                next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                    var updatedResult, lastRequestId;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                handlingNext = true;\n                                updatedResult = result;\n                                lastRequestId = this.getQuery(queryId).lastRequestId;\n                                if (!(requestId >= (lastRequestId || 1))) return [3, 3];\n                                if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                return [4, this.localState\n                                        .runResolvers({\n                                        document: clientQuery,\n                                        remoteResult: result,\n                                        context: updatedContext,\n                                        variables: variables,\n                                    })\n                                        .catch(function (error) {\n                                        handlingNext = false;\n                                        reject(error);\n                                        return result;\n                                    })];\n                            case 1:\n                                updatedResult = _a.sent();\n                                _a.label = 2;\n                            case 2:\n                                if (fetchPolicy !== 'no-cache') {\n                                    try {\n                                        this.dataStore.markQueryResult(updatedResult, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                                    }\n                                    catch (e) {\n                                        handlingNext = false;\n                                        reject(e);\n                                        return [2];\n                                    }\n                                }\n                                else {\n                                    this.setQuery(queryId, function () { return ({\n                                        newData: { result: updatedResult.data, complete: true },\n                                    }); });\n                                }\n                                this.queryStore.markQueryResult(queryId, updatedResult, fetchMoreForQueryId);\n                                this.invalidate(true, queryId, fetchMoreForQueryId);\n                                this.broadcastQueries();\n                                _a.label = 3;\n                            case 3:\n                                if (updatedResult.errors && errorPolicy === 'none') {\n                                    handlingNext = false;\n                                    reject(new ApolloError({\n                                        graphQLErrors: updatedResult.errors,\n                                    }));\n                                    return [2];\n                                }\n                                else if (errorPolicy === 'all') {\n                                    errorsFromStore = updatedResult.errors;\n                                }\n                                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                                    resultFromStore = updatedResult.data;\n                                }\n                                else {\n                                    try {\n                                        resultFromStore = this.dataStore.getCache().read({\n                                            variables: variables,\n                                            query: document,\n                                            optimistic: false,\n                                        });\n                                    }\n                                    catch (e) { }\n                                }\n                                handlingNext = false;\n                                if (complete) {\n                                    subscriber.complete();\n                                }\n                                return [2];\n                        }\n                    });\n                }); },\n                error: function (error) {\n                    _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    if (!handlingNext) {\n                        _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n                        _this.setQuery(queryId, function (_a) {\n                            var subscriptions = _a.subscriptions;\n                            return ({\n                                subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                            });\n                        });\n                        resolve({\n                            data: resultFromStore,\n                            errors: errorsFromStore,\n                            loading: false,\n                            networkStatus: NetworkStatus.ready,\n                            stale: false,\n                        });\n                    }\n                    complete = true;\n                },\n            };\n            var subscription = obs.subscribe(subscriber);\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        }).catch(function (error) {\n            _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n            throw error;\n        });\n    };\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: [],\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: null,\n            observableQuery: null,\n            subscriptions: [],\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: getOperationName(document) || undefined,\n            context: this.prepareContext(extraContext),\n        };\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign({}, newContext, { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            this.pollingInfoByQueryId.set(queryId, {\n                interval: pollInterval,\n                lastPollTimeMs: Date.now() - 10,\n                options: __assign({}, options, { fetchPolicy: 'network-only' }),\n            });\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            this.schedulePoll(pollInterval);\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    QueryManager.prototype.schedulePoll = function (timeLimitMs) {\n        var _this = this;\n        var now = Date.now();\n        if (this.nextPoll) {\n            if (timeLimitMs < this.nextPoll.time - now) {\n                clearTimeout(this.nextPoll.timeout);\n            }\n            else {\n                return;\n            }\n        }\n        this.nextPoll = {\n            time: now + timeLimitMs,\n            timeout: setTimeout(function () {\n                _this.nextPoll = null;\n                var nextTimeLimitMs = Infinity;\n                _this.pollingInfoByQueryId.forEach(function (info, queryId) {\n                    if (info.interval < nextTimeLimitMs) {\n                        nextTimeLimitMs = info.interval;\n                    }\n                    if (!_this.checkInFlight(queryId)) {\n                        if (Date.now() - info.lastPollTimeMs >= info.interval) {\n                            var updateLastPollTime = function () {\n                                info.lastPollTimeMs = Date.now();\n                            };\n                            _this.fetchQuery(queryId, info.options, FetchType.poll).then(updateLastPollTime, updateLastPollTime);\n                        }\n                    }\n                });\n                if (isFinite(nextTimeLimitMs)) {\n                    _this.schedulePoll(nextTimeLimitMs);\n                }\n            }, timeLimitMs),\n        };\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.5.1\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        this.clientAwareness = {};\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        var supportedCache = new Map();\n        var supportedDirectives = new ApolloLink(function (operation, forward) {\n            var result = supportedCache.get(operation.query);\n            if (!result) {\n                result = removeConnectionDirectiveFromDocument(operation.query);\n                supportedCache.set(operation.query, result);\n                supportedCache.set(result, result);\n            }\n            operation.query = result;\n            return forward(operation);\n        });\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        if (clientAwarenessName) {\n            this.clientAwareness.name = clientAwarenessName;\n        }\n        if (clientAwarenessVersion) {\n            this.clientAwareness.version = clientAwarenessVersion;\n        }\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        if (this.queryManager) {\n            this.queryManager.stop();\n        }\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network') : invariant(options.fetchPolicy !== 'cache-and-network', 'cache-and-network fetchPolicy can only be used with watchQuery');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.initQueryManager().mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.initQueryManager().startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (!this.queryManager) {\n            this.queryManager = new QueryManager({\n                link: this.link,\n                store: this.store,\n                queryDeduplication: this.queryDeduplication,\n                ssrMode: this.ssrMode,\n                clientAwareness: this.clientAwareness,\n                localState: this.localState,\n                onBroadcast: function () {\n                    if (_this.devToolsHookCb) {\n                        _this.devToolsHookCb({\n                            action: {},\n                            state: {\n                                queries: _this.queryManager\n                                    ? _this.queryManager.queryStore.getStore()\n                                    : {},\n                                mutations: _this.queryManager\n                                    ? _this.queryManager.mutationStore.getStore()\n                                    : {},\n                            },\n                            dataWithOptimisticResults: _this.cache.extract(true),\n                        });\n                    }\n                },\n            });\n        }\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        var queryManager = this.queryManager;\n        return Promise.resolve()\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return queryManager ? queryManager.clearStore() : Promise.resolve(null);\n        });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ObservableQuery, NetworkStatus, isApolloError, ApolloError, FetchType };\n//# sourceMappingURL=bundle.esm.js.map\n"],"names":["NetworkStatus","__extends","Observable$1","FetchType","__assign","cloneDeep","isEqual","invariant","tryFunctionOrLogError","InvariantError","mergeDeep","__awaiter","__generator","hasDirectives","removeClientSetsFromDocument","visit","BREAK","buildQueryFromSelectionSet","getMainDefinition","getFragmentDefinitions","createFragmentMap","shouldInclude","isField","resultKeyNameFromField","isInlineFragment","mergeDeepArray","argumentsObjectFromField","ApolloLink","DedupLink","assign","getDefaultValues","getMutationDefinition","hasClientExports","graphQLResultHasError","execute","getQueryDefinition","getOperationDefinition","getOperationName","removeConnectionDirectiveFromDocument"],"mappings":"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"}