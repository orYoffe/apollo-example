{"version":3,"file":"bundle.cjs.js","sources":["bundle.esm.js"],"sourcesContent":["import { __extends, __assign, __awaiter, __generator } from 'tslib';\nimport { cloneDeep, isEqual, tryFunctionOrLogError, mergeDeep, hasDirectives, removeClientSetsFromDocument, buildQueryFromSelectionSet, getMainDefinition, getFragmentDefinitions, createFragmentMap, mergeDeepArray, resultKeyNameFromField, argumentsObjectFromField, shouldInclude, isField, isInlineFragment, assign, getDefaultValues, getMutationDefinition, hasClientExports, graphQLResultHasError, getQueryDefinition, getOperationDefinition, getOperationName, removeConnectionDirectiveFromDocument } from 'apollo-utilities';\nimport { Observable as Observable$1, ApolloLink, execute } from 'apollo-link';\nimport $$observable from 'symbol-observable';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { DedupLink } from 'apollo-link-dedup';\nimport { visit, BREAK } from 'graphql/language/visitor';\n\nvar NetworkStatus;\n(function (NetworkStatus) {\n    NetworkStatus[NetworkStatus[\"loading\"] = 1] = \"loading\";\n    NetworkStatus[NetworkStatus[\"setVariables\"] = 2] = \"setVariables\";\n    NetworkStatus[NetworkStatus[\"fetchMore\"] = 3] = \"fetchMore\";\n    NetworkStatus[NetworkStatus[\"refetch\"] = 4] = \"refetch\";\n    NetworkStatus[NetworkStatus[\"poll\"] = 6] = \"poll\";\n    NetworkStatus[NetworkStatus[\"ready\"] = 7] = \"ready\";\n    NetworkStatus[NetworkStatus[\"error\"] = 8] = \"error\";\n})(NetworkStatus || (NetworkStatus = {}));\nfunction isNetworkRequestInFlight(networkStatus) {\n    return networkStatus < 7;\n}\n\nvar Observable = (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Observable.prototype[$$observable] = function () {\n        return this;\n    };\n    Observable.prototype['@@observable'] = function () {\n        return this;\n    };\n    return Observable;\n}(Observable$1));\n\nfunction isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (Array.isArray(err.graphQLErrors) && err.graphQLErrors.length !== 0) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += \"GraphQL error: \" + errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += 'Network error: ' + err.networkError.message + '\\n';\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        if (!errorMessage) {\n            _this.message = generateErrorMessage(_this);\n        }\n        else {\n            _this.message = errorMessage;\n        }\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\n\nvar FetchType;\n(function (FetchType) {\n    FetchType[FetchType[\"normal\"] = 1] = \"normal\";\n    FetchType[FetchType[\"refetch\"] = 2] = \"refetch\";\n    FetchType[FetchType[\"poll\"] = 3] = \"poll\";\n})(FetchType || (FetchType = {}));\n\nvar hasError = function (storeValue, policy) {\n    if (policy === void 0) { policy = 'none'; }\n    return storeValue &&\n        ((storeValue.graphQLErrors &&\n            storeValue.graphQLErrors.length > 0 &&\n            policy === 'none') ||\n            storeValue.networkError);\n};\nvar ObservableQuery = (function (_super) {\n    __extends(ObservableQuery, _super);\n    function ObservableQuery(_a) {\n        var queryManager = _a.queryManager, options = _a.options, _b = _a.shouldSubscribe, shouldSubscribe = _b === void 0 ? true : _b;\n        var _this = _super.call(this, function (observer) {\n            return _this.onSubscribe(observer);\n        }) || this;\n        _this.isTornDown = false;\n        _this.options = options;\n        _this.variables = options.variables || {};\n        _this.queryId = queryManager.generateQueryId();\n        _this.shouldSubscribe = shouldSubscribe;\n        _this.queryManager = queryManager;\n        _this.observers = [];\n        _this.subscriptionHandles = [];\n        return _this;\n    }\n    ObservableQuery.prototype.result = function () {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            var subscription;\n            var observer = {\n                next: function (result) {\n                    resolve(result);\n                    if (!that.observers.some(function (obs) { return obs !== observer; })) {\n                        that.queryManager.removeQuery(that.queryId);\n                    }\n                    setTimeout(function () {\n                        subscription.unsubscribe();\n                    }, 0);\n                },\n                error: function (error) {\n                    reject(error);\n                },\n            };\n            subscription = that.subscribe(observer);\n        });\n    };\n    ObservableQuery.prototype.currentResult = function () {\n        var result = this.getCurrentResult();\n        if (result.data === undefined) {\n            result.data = {};\n        }\n        return result;\n    };\n    ObservableQuery.prototype.getCurrentResult = function () {\n        if (this.isTornDown) {\n            return {\n                data: this.lastError\n                    ? undefined\n                    : this.lastResult\n                        ? this.lastResult.data\n                        : undefined,\n                error: this.lastError,\n                loading: false,\n                networkStatus: NetworkStatus.error,\n            };\n        }\n        var queryStoreValue = this.queryManager.queryStore.get(this.queryId);\n        if (hasError(queryStoreValue, this.options.errorPolicy)) {\n            return {\n                data: undefined,\n                loading: false,\n                networkStatus: queryStoreValue.networkStatus,\n                error: new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }),\n            };\n        }\n        if (queryStoreValue && queryStoreValue.variables) {\n            this.options.variables = Object.assign({}, this.options.variables, queryStoreValue.variables);\n        }\n        var _a = this.queryManager.getCurrentQueryResult(this), data = _a.data, partial = _a.partial;\n        var queryLoading = !queryStoreValue ||\n            queryStoreValue.networkStatus === NetworkStatus.loading;\n        var loading = (this.options.fetchPolicy === 'network-only' && queryLoading) ||\n            (partial && this.options.fetchPolicy !== 'cache-only');\n        var networkStatus;\n        if (queryStoreValue) {\n            networkStatus = queryStoreValue.networkStatus;\n        }\n        else {\n            networkStatus = loading ? NetworkStatus.loading : NetworkStatus.ready;\n        }\n        var result = {\n            data: data,\n            loading: isNetworkRequestInFlight(networkStatus),\n            networkStatus: networkStatus,\n        };\n        if (queryStoreValue &&\n            queryStoreValue.graphQLErrors &&\n            this.options.errorPolicy === 'all') {\n            result.errors = queryStoreValue.graphQLErrors;\n        }\n        if (!partial) {\n            this.lastResult = __assign({}, result, { stale: false });\n            this.lastResultSnapshot = cloneDeep(this.lastResult);\n        }\n        return __assign({}, result, { partial: partial });\n    };\n    ObservableQuery.prototype.isDifferentFromLastResult = function (newResult) {\n        var snapshot = this.lastResultSnapshot;\n        return !(snapshot &&\n            newResult &&\n            snapshot.networkStatus === newResult.networkStatus &&\n            snapshot.stale === newResult.stale &&\n            isEqual(snapshot.data, newResult.data));\n    };\n    ObservableQuery.prototype.getLastResult = function () {\n        return this.lastResult;\n    };\n    ObservableQuery.prototype.getLastError = function () {\n        return this.lastError;\n    };\n    ObservableQuery.prototype.resetLastResults = function () {\n        delete this.lastResult;\n        delete this.lastResultSnapshot;\n        delete this.lastError;\n        this.isTornDown = false;\n    };\n    ObservableQuery.prototype.refetch = function (variables) {\n        var fetchPolicy = this.options.fetchPolicy;\n        if (fetchPolicy === 'cache-only') {\n            return Promise.reject(new Error('cache-only fetchPolicy option should not be used together with query refetch.'));\n        }\n        if (!isEqual(this.variables, variables)) {\n            this.variables = Object.assign({}, this.variables, variables);\n        }\n        if (!isEqual(this.options.variables, this.variables)) {\n            this.options.variables = Object.assign({}, this.options.variables, this.variables);\n        }\n        var isNetworkFetchPolicy = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n        var combinedOptions = __assign({}, this.options, { fetchPolicy: isNetworkFetchPolicy ? fetchPolicy : 'network-only' });\n        return this.queryManager\n            .fetchQuery(this.queryId, combinedOptions, FetchType.refetch)\n            .then(function (result) { return result; });\n    };\n    ObservableQuery.prototype.fetchMore = function (fetchMoreOptions) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(fetchMoreOptions.updateQuery) : invariant(fetchMoreOptions.updateQuery, 'updateQuery option is required. This function defines how to update the query data with the new results.');\n        var combinedOptions;\n        return Promise.resolve()\n            .then(function () {\n            var qid = _this.queryManager.generateQueryId();\n            if (fetchMoreOptions.query) {\n                combinedOptions = fetchMoreOptions;\n            }\n            else {\n                combinedOptions = __assign({}, _this.options, fetchMoreOptions, { variables: Object.assign({}, _this.variables, fetchMoreOptions.variables) });\n            }\n            combinedOptions.fetchPolicy = 'network-only';\n            return _this.queryManager.fetchQuery(qid, combinedOptions, FetchType.normal, _this.queryId);\n        })\n            .then(function (fetchMoreResult) {\n            _this.updateQuery(function (previousResult) {\n                return fetchMoreOptions.updateQuery(previousResult, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables,\n                });\n            });\n            return fetchMoreResult;\n        });\n    };\n    ObservableQuery.prototype.subscribeToMore = function (options) {\n        var _this = this;\n        var subscription = this.queryManager\n            .startGraphQLSubscription({\n            query: options.document,\n            variables: options.variables,\n        })\n            .subscribe({\n            next: function (subscriptionData) {\n                if (options.updateQuery) {\n                    _this.updateQuery(function (previous, _a) {\n                        var variables = _a.variables;\n                        return options.updateQuery(previous, {\n                            subscriptionData: subscriptionData,\n                            variables: variables,\n                        });\n                    });\n                }\n            },\n            error: function (err) {\n                if (options.onError) {\n                    options.onError(err);\n                    return;\n                }\n                console.error('Unhandled GraphQL subscription error', err);\n            },\n        });\n        this.subscriptionHandles.push(subscription);\n        return function () {\n            var i = _this.subscriptionHandles.indexOf(subscription);\n            if (i >= 0) {\n                _this.subscriptionHandles.splice(i, 1);\n                subscription.unsubscribe();\n            }\n        };\n    };\n    ObservableQuery.prototype.setOptions = function (opts) {\n        var oldOptions = this.options;\n        this.options = Object.assign({}, this.options, opts);\n        if (opts.pollInterval) {\n            this.startPolling(opts.pollInterval);\n        }\n        else if (opts.pollInterval === 0) {\n            this.stopPolling();\n        }\n        var tryFetch = (oldOptions.fetchPolicy !== 'network-only' &&\n            opts.fetchPolicy === 'network-only') ||\n            (oldOptions.fetchPolicy === 'cache-only' &&\n                opts.fetchPolicy !== 'cache-only') ||\n            (oldOptions.fetchPolicy === 'standby' &&\n                opts.fetchPolicy !== 'standby') ||\n            false;\n        return this.setVariables(this.options.variables, tryFetch, opts.fetchResults);\n    };\n    ObservableQuery.prototype.setVariables = function (variables, tryFetch, fetchResults) {\n        if (tryFetch === void 0) { tryFetch = false; }\n        if (fetchResults === void 0) { fetchResults = true; }\n        this.isTornDown = false;\n        var newVariables = variables ? variables : this.variables;\n        if (isEqual(newVariables, this.variables) && !tryFetch) {\n            if (this.observers.length === 0 || !fetchResults) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.result();\n        }\n        else {\n            this.variables = newVariables;\n            this.options.variables = newVariables;\n            if (this.observers.length === 0) {\n                return new Promise(function (resolve) { return resolve(); });\n            }\n            return this.queryManager\n                .fetchQuery(this.queryId, __assign({}, this.options, { variables: this.variables }))\n                .then(function (result) { return result; });\n        }\n    };\n    ObservableQuery.prototype.updateQuery = function (mapFn) {\n        var _a = this.queryManager.getQueryWithPreviousResult(this.queryId), previousResult = _a.previousResult, variables = _a.variables, document = _a.document;\n        var newResult = tryFunctionOrLogError(function () {\n            return mapFn(previousResult, { variables: variables });\n        });\n        if (newResult) {\n            this.queryManager.dataStore.markUpdateQueryResult(document, variables, newResult);\n            this.queryManager.broadcastQueries();\n        }\n    };\n    ObservableQuery.prototype.stopPolling = function () {\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.options.pollInterval = undefined;\n    };\n    ObservableQuery.prototype.startPolling = function (pollInterval) {\n        assertNotCacheFirstOrOnly(this);\n        this.options.pollInterval = pollInterval;\n        this.queryManager.startPollingQuery(this.options, this.queryId);\n    };\n    ObservableQuery.prototype.onSubscribe = function (observer) {\n        var _this = this;\n        if (observer._subscription &&\n            observer._subscription._observer &&\n            !observer._subscription._observer.error) {\n            observer._subscription._observer.error = function (error) {\n                console.error('Unhandled error', error.message, error.stack);\n            };\n        }\n        this.observers.push(observer);\n        if (observer.next && this.lastResult)\n            observer.next(this.lastResult);\n        if (observer.error && this.lastError)\n            observer.error(this.lastError);\n        if (this.observers.length === 1)\n            this.setUpQuery();\n        return function () {\n            _this.observers = _this.observers.filter(function (obs) { return obs !== observer; });\n            if (_this.observers.length === 0) {\n                _this.tearDownQuery();\n            }\n        };\n    };\n    ObservableQuery.prototype.setUpQuery = function () {\n        var _this = this;\n        if (this.shouldSubscribe) {\n            this.queryManager.addObservableQuery(this.queryId, this);\n        }\n        if (!!this.options.pollInterval) {\n            assertNotCacheFirstOrOnly(this);\n            this.queryManager.startPollingQuery(this.options, this.queryId);\n        }\n        var observer = {\n            next: function (result) {\n                _this.lastResult = result;\n                _this.lastResultSnapshot = cloneDeep(result);\n                _this.observers.forEach(function (obs) { return obs.next && obs.next(result); });\n            },\n            error: function (error) {\n                _this.lastError = error;\n                _this.observers.forEach(function (obs) { return obs.error && obs.error(error); });\n            },\n        };\n        this.queryManager.startQuery(this.queryId, this.options, this.queryManager.queryListenerForObserver(this.queryId, this.options, observer));\n    };\n    ObservableQuery.prototype.tearDownQuery = function () {\n        this.isTornDown = true;\n        this.queryManager.stopPollingQuery(this.queryId);\n        this.subscriptionHandles.forEach(function (sub) { return sub.unsubscribe(); });\n        this.subscriptionHandles = [];\n        this.queryManager.removeObservableQuery(this.queryId);\n        this.queryManager.stopQuery(this.queryId);\n        this.observers = [];\n    };\n    return ObservableQuery;\n}(Observable));\nfunction assertNotCacheFirstOrOnly(obsQuery) {\n    var fetchPolicy = obsQuery.options.fetchPolicy;\n    process.env.NODE_ENV === \"production\" ? invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only') : invariant(fetchPolicy !== 'cache-first' && fetchPolicy !== 'cache-only', 'Queries that specify the cache-first and cache-only fetchPolicies cannot also be polling queries.');\n}\n\nvar MutationStore = (function () {\n    function MutationStore() {\n        this.store = {};\n    }\n    MutationStore.prototype.getStore = function () {\n        return this.store;\n    };\n    MutationStore.prototype.get = function (mutationId) {\n        return this.store[mutationId];\n    };\n    MutationStore.prototype.initMutation = function (mutationId, mutation, variables) {\n        this.store[mutationId] = {\n            mutation: mutation,\n            variables: variables || {},\n            loading: true,\n            error: null,\n        };\n    };\n    MutationStore.prototype.markMutationError = function (mutationId, error) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = error;\n    };\n    MutationStore.prototype.markMutationResult = function (mutationId) {\n        var mutation = this.store[mutationId];\n        if (!mutation) {\n            return;\n        }\n        mutation.loading = false;\n        mutation.error = null;\n    };\n    MutationStore.prototype.reset = function () {\n        this.store = {};\n    };\n    return MutationStore;\n}());\n\nvar QueryStore = (function () {\n    function QueryStore() {\n        this.store = {};\n    }\n    QueryStore.prototype.getStore = function () {\n        return this.store;\n    };\n    QueryStore.prototype.get = function (queryId) {\n        return this.store[queryId];\n    };\n    QueryStore.prototype.initQuery = function (query) {\n        var previousQuery = this.store[query.queryId];\n        if (previousQuery &&\n            previousQuery.document !== query.document &&\n            !isEqual(previousQuery.document, query.document)) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError('Internal Error: may not update existing query string in store');\n        }\n        var isSetVariables = false;\n        var previousVariables = null;\n        if (query.storePreviousVariables &&\n            previousQuery &&\n            previousQuery.networkStatus !== NetworkStatus.loading) {\n            if (!isEqual(previousQuery.variables, query.variables)) {\n                isSetVariables = true;\n                previousVariables = previousQuery.variables;\n            }\n        }\n        var networkStatus;\n        if (isSetVariables) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        else if (query.isPoll) {\n            networkStatus = NetworkStatus.poll;\n        }\n        else if (query.isRefetch) {\n            networkStatus = NetworkStatus.refetch;\n        }\n        else {\n            networkStatus = NetworkStatus.loading;\n        }\n        var graphQLErrors = [];\n        if (previousQuery && previousQuery.graphQLErrors) {\n            graphQLErrors = previousQuery.graphQLErrors;\n        }\n        this.store[query.queryId] = {\n            document: query.document,\n            variables: query.variables,\n            previousVariables: previousVariables,\n            networkError: null,\n            graphQLErrors: graphQLErrors,\n            networkStatus: networkStatus,\n            metadata: query.metadata,\n        };\n        if (typeof query.fetchMoreForQueryId === 'string' &&\n            this.store[query.fetchMoreForQueryId]) {\n            this.store[query.fetchMoreForQueryId].networkStatus =\n                NetworkStatus.fetchMore;\n        }\n    };\n    QueryStore.prototype.markQueryResult = function (queryId, result, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].graphQLErrors =\n            result.errors && result.errors.length ? result.errors : [];\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = NetworkStatus.ready;\n        if (typeof fetchMoreForQueryId === 'string' &&\n            this.store[fetchMoreForQueryId]) {\n            this.store[fetchMoreForQueryId].networkStatus = NetworkStatus.ready;\n        }\n    };\n    QueryStore.prototype.markQueryError = function (queryId, error, fetchMoreForQueryId) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = error;\n        this.store[queryId].networkStatus = NetworkStatus.error;\n        if (typeof fetchMoreForQueryId === 'string') {\n            this.markQueryResultClient(fetchMoreForQueryId, true);\n        }\n    };\n    QueryStore.prototype.markQueryResultClient = function (queryId, complete) {\n        if (!this.store || !this.store[queryId])\n            return;\n        this.store[queryId].networkError = null;\n        this.store[queryId].previousVariables = null;\n        this.store[queryId].networkStatus = complete\n            ? NetworkStatus.ready\n            : NetworkStatus.loading;\n    };\n    QueryStore.prototype.stopQuery = function (queryId) {\n        delete this.store[queryId];\n    };\n    QueryStore.prototype.reset = function (observableQueryIds) {\n        var _this = this;\n        this.store = Object.keys(this.store)\n            .filter(function (queryId) {\n            return observableQueryIds.indexOf(queryId) > -1;\n        })\n            .reduce(function (res, key) {\n            res[key] = __assign({}, _this.store[key], { networkStatus: NetworkStatus.loading });\n            return res;\n        }, {});\n    };\n    return QueryStore;\n}());\n\nfunction capitalizeFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nvar LocalState = (function () {\n    function LocalState(_a) {\n        var cache = _a.cache, client = _a.client, resolvers = _a.resolvers, fragmentMatcher = _a.fragmentMatcher;\n        this.cache = cache;\n        if (client) {\n            this.client = client;\n        }\n        if (resolvers) {\n            this.addResolvers(resolvers);\n        }\n        if (fragmentMatcher) {\n            this.setFragmentMatcher(fragmentMatcher);\n        }\n    }\n    LocalState.prototype.addResolvers = function (resolvers) {\n        var _this = this;\n        this.resolvers = this.resolvers || {};\n        if (Array.isArray(resolvers)) {\n            resolvers.forEach(function (resolverGroup) {\n                _this.resolvers = mergeDeep(_this.resolvers, resolverGroup);\n            });\n        }\n        else {\n            this.resolvers = mergeDeep(this.resolvers, resolvers);\n        }\n    };\n    LocalState.prototype.setResolvers = function (resolvers) {\n        this.resolvers = {};\n        this.addResolvers(resolvers);\n    };\n    LocalState.prototype.getResolvers = function () {\n        return this.resolvers || {};\n    };\n    LocalState.prototype.runResolvers = function (_a) {\n        var document = _a.document, remoteResult = _a.remoteResult, context = _a.context, variables = _a.variables, _b = _a.onlyRunForcedResolvers, onlyRunForcedResolvers = _b === void 0 ? false : _b;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                if (document) {\n                    return [2, this.resolveDocument(document, remoteResult.data, context, variables, this.fragmentMatcher, onlyRunForcedResolvers).then(function (localResult) { return (__assign({}, remoteResult, { data: localResult.result })); })];\n                }\n                return [2, remoteResult];\n            });\n        });\n    };\n    LocalState.prototype.setFragmentMatcher = function (fragmentMatcher) {\n        this.fragmentMatcher = fragmentMatcher;\n    };\n    LocalState.prototype.getFragmentMatcher = function () {\n        return this.fragmentMatcher;\n    };\n    LocalState.prototype.clientQuery = function (document) {\n        if (hasDirectives(['client'], document)) {\n            if (this.resolvers) {\n                return document;\n            }\n            process.env.NODE_ENV === \"production\" || invariant.warn('Found @client directives in query but no client resolvers were specified. ' +\n                'You can now pass apollo-link-state resolvers to the ApolloClient constructor.');\n        }\n        return null;\n    };\n    LocalState.prototype.serverQuery = function (document) {\n        return this.resolvers ? removeClientSetsFromDocument(document) : document;\n    };\n    LocalState.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var cache = this.cache;\n        var newContext = __assign({}, context, { cache: cache, getCacheKey: function (obj) {\n                if (cache.config) {\n                    return cache.config.dataIdFromObject(obj);\n                }\n                else {\n                    process.env.NODE_ENV === \"production\" ? invariant(false) : invariant(false, 'To use context.getCacheKey, you need to use a cache that has ' +\n                        'a configurable dataIdFromObject, like apollo-cache-inmemory.');\n                }\n            } });\n        return newContext;\n    };\n    LocalState.prototype.addExportedVariables = function (document, variables, context) {\n        if (variables === void 0) { variables = {}; }\n        if (context === void 0) { context = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (document) {\n                    return [2, this.resolveDocument(document, this.buildRootValueFromCache(document, variables) || {}, this.prepareContext(context), variables).then(function (data) { return (__assign({}, variables, data.exportedVariables)); })];\n                }\n                return [2, __assign({}, variables)];\n            });\n        });\n    };\n    LocalState.prototype.shouldForceResolvers = function (document) {\n        var forceResolvers = false;\n        visit(document, {\n            Directive: {\n                enter: function (node) {\n                    if (node.name.value === 'client' && node.arguments) {\n                        forceResolvers = node.arguments.some(function (arg) {\n                            return arg.name.value === 'always' &&\n                                arg.value.kind === 'BooleanValue' &&\n                                arg.value.value === true;\n                        });\n                        if (forceResolvers) {\n                            return BREAK;\n                        }\n                    }\n                },\n            },\n        });\n        return forceResolvers;\n    };\n    LocalState.prototype.shouldForceResolver = function (field) {\n        return this.shouldForceResolvers(field);\n    };\n    LocalState.prototype.buildRootValueFromCache = function (document, variables) {\n        return this.cache.diff({\n            query: buildQueryFromSelectionSet(document),\n            variables: variables,\n            optimistic: false,\n        }).result;\n    };\n    LocalState.prototype.resolveDocument = function (document, rootValue, context, variables, fragmentMatcher, onlyRunForcedResolvers) {\n        if (context === void 0) { context = {}; }\n        if (variables === void 0) { variables = {}; }\n        if (fragmentMatcher === void 0) { fragmentMatcher = function () { return true; }; }\n        if (onlyRunForcedResolvers === void 0) { onlyRunForcedResolvers = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var mainDefinition, fragments, fragmentMap, definitionOperation, defaultOperationType, _a, cache, client, execContext;\n            return __generator(this, function (_b) {\n                mainDefinition = getMainDefinition(document);\n                fragments = getFragmentDefinitions(document);\n                fragmentMap = createFragmentMap(fragments);\n                definitionOperation = mainDefinition\n                    .operation;\n                defaultOperationType = definitionOperation\n                    ? capitalizeFirstLetter(definitionOperation)\n                    : 'Query';\n                _a = this, cache = _a.cache, client = _a.client;\n                execContext = {\n                    fragmentMap: fragmentMap,\n                    context: __assign({}, context, { cache: cache,\n                        client: client }),\n                    variables: variables,\n                    fragmentMatcher: fragmentMatcher,\n                    defaultOperationType: defaultOperationType,\n                    exportedVariables: {},\n                    onlyRunForcedResolvers: onlyRunForcedResolvers,\n                };\n                return [2, this.resolveSelectionSet(mainDefinition.selectionSet, rootValue, execContext).then(function (result) { return ({\n                        result: result,\n                        exportedVariables: execContext.exportedVariables,\n                    }); })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSelectionSet = function (selectionSet, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fragmentMap, context, variables, resultsToMerge, execute;\n            var _this = this;\n            return __generator(this, function (_a) {\n                fragmentMap = execContext.fragmentMap, context = execContext.context, variables = execContext.variables;\n                resultsToMerge = [rootValue];\n                execute = function (selection) { return __awaiter(_this, void 0, void 0, function () {\n                    var fragment, typeCondition;\n                    return __generator(this, function (_a) {\n                        if (!shouldInclude(selection, variables)) {\n                            return [2];\n                        }\n                        if (isField(selection)) {\n                            return [2, this.resolveField(selection, rootValue, execContext).then(function (fieldResult) {\n                                    var _a;\n                                    if (typeof fieldResult !== 'undefined') {\n                                        resultsToMerge.push((_a = {},\n                                            _a[resultKeyNameFromField(selection)] = fieldResult,\n                                            _a));\n                                    }\n                                })];\n                        }\n                        if (isInlineFragment(selection)) {\n                            fragment = selection;\n                        }\n                        else {\n                            fragment = fragmentMap[selection.name.value];\n                            process.env.NODE_ENV === \"production\" ? invariant(fragment) : invariant(fragment, \"No fragment named \" + selection.name.value);\n                        }\n                        if (fragment && fragment.typeCondition) {\n                            typeCondition = fragment.typeCondition.name.value;\n                            if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n                                return [2, this.resolveSelectionSet(fragment.selectionSet, rootValue, execContext).then(function (fragmentResult) {\n                                        resultsToMerge.push(fragmentResult);\n                                    })];\n                            }\n                        }\n                        return [2];\n                    });\n                }); };\n                return [2, Promise.all(selectionSet.selections.map(execute)).then(function () {\n                        return mergeDeepArray(resultsToMerge);\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveField = function (field, rootValue, execContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var variables, fieldName, aliasedFieldName, aliasUsed, defaultResult, resultPromise, resolverType, resolverMap, resolve;\n            var _this = this;\n            return __generator(this, function (_a) {\n                variables = execContext.variables;\n                fieldName = field.name.value;\n                aliasedFieldName = resultKeyNameFromField(field);\n                aliasUsed = fieldName !== aliasedFieldName;\n                defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n                resultPromise = Promise.resolve(defaultResult);\n                if (!execContext.onlyRunForcedResolvers ||\n                    this.shouldForceResolver(field)) {\n                    resolverType = rootValue.__typename || execContext.defaultOperationType;\n                    resolverMap = this.resolvers && this.resolvers[resolverType];\n                    if (resolverMap) {\n                        resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n                        if (resolve) {\n                            resultPromise = Promise.resolve(resolve(rootValue, argumentsObjectFromField(field, variables), execContext.context, { field: field }));\n                        }\n                    }\n                }\n                return [2, resultPromise.then(function (result) {\n                        if (result === void 0) { result = defaultResult; }\n                        if (field.directives) {\n                            field.directives.forEach(function (directive) {\n                                if (directive.name.value === 'export' && directive.arguments) {\n                                    directive.arguments.forEach(function (arg) {\n                                        if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                                            execContext.exportedVariables[arg.value.value] = result;\n                                        }\n                                    });\n                                }\n                            });\n                        }\n                        if (!field.selectionSet) {\n                            return result;\n                        }\n                        if (result == null) {\n                            return result;\n                        }\n                        if (Array.isArray(result)) {\n                            return _this.resolveSubSelectedArray(field, result, execContext);\n                        }\n                        if (field.selectionSet) {\n                            return _this.resolveSelectionSet(field.selectionSet, result, execContext);\n                        }\n                    })];\n            });\n        });\n    };\n    LocalState.prototype.resolveSubSelectedArray = function (field, result, execContext) {\n        var _this = this;\n        return Promise.all(result.map(function (item) {\n            if (item === null) {\n                return null;\n            }\n            if (Array.isArray(item)) {\n                return _this.resolveSubSelectedArray(field, item, execContext);\n            }\n            if (field.selectionSet) {\n                return _this.resolveSelectionSet(field.selectionSet, item, execContext);\n            }\n        }));\n    };\n    return LocalState;\n}());\n\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, store = _a.store, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.queryIdsByName = {};\n        this.pollingInfoByQueryId = new Map();\n        this.nextPoll = null;\n        this.link = link;\n        this.deduplicator = ApolloLink.from([new DedupLink(), link]);\n        this.queryDeduplication = queryDeduplication;\n        this.dataStore = store;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: store.getCache() });\n        this.ssrMode = ssrMode;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new Error('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, cache, generateUpdateQueriesInfo, updatedVariables, _f;\n            var _this = this;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        process.env.NODE_ENV === \"production\" ? invariant(mutation) : invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        process.env.NODE_ENV === \"production\" ? invariant(!fetchPolicy || fetchPolicy === 'no-cache') : invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"fetchPolicy for mutations currently only supports the 'no-cache' policy\");\n                        mutationId = this.generateQueryId();\n                        cache = this.dataStore.getCache();\n                        (mutation = cache.transformDocument(mutation)),\n                            (variables = assign({}, getDefaultValues(getMutationDefinition(mutation)), variables));\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                Object.keys(updateQueriesByName).forEach(function (queryName) {\n                                    return (_this.queryIdsByName[queryName] || []).forEach(function (queryId) {\n                                        ret[queryId] = {\n                                            updater: updateQueriesByName[queryName],\n                                            query: _this.queryStore.get(queryId),\n                                        };\n                                    });\n                                });\n                            }\n                            return ret;\n                        };\n                        if (!hasClientExports(mutation)) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        _f = _g.sent();\n                        return [3, 3];\n                    case 2:\n                        _f = variables;\n                        _g.label = 3;\n                    case 3:\n                        updatedVariables = _f;\n                        this.mutationStore.initMutation(mutationId, mutation, updatedVariables);\n                        this.dataStore.markMutationInit({\n                            mutationId: mutationId,\n                            document: mutation,\n                            variables: updatedVariables || {},\n                            updateQueries: generateUpdateQueriesInfo(),\n                            update: updateWithProxyFn,\n                            optimisticResponse: optimisticResponse,\n                        });\n                        this.broadcastQueries();\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                var operation = _this.buildOperationForLink(mutation, updatedVariables, __assign({}, context, { optimisticResponse: optimisticResponse }));\n                                var completeMutation = function () {\n                                    if (error) {\n                                        _this.mutationStore.markMutationError(mutationId, error);\n                                    }\n                                    _this.dataStore.markMutationComplete({\n                                        mutationId: mutationId,\n                                        optimisticResponse: optimisticResponse,\n                                    });\n                                    _this.broadcastQueries();\n                                    if (error) {\n                                        return Promise.reject(error);\n                                    }\n                                    if (typeof refetchQueries === 'function') {\n                                        refetchQueries = refetchQueries(storeResult);\n                                    }\n                                    var refetchQueryPromises = [];\n                                    for (var _i = 0, refetchQueries_1 = refetchQueries; _i < refetchQueries_1.length; _i++) {\n                                        var refetchQuery = refetchQueries_1[_i];\n                                        if (typeof refetchQuery === 'string') {\n                                            var promise = _this.refetchQueryByName(refetchQuery);\n                                            if (promise) {\n                                                refetchQueryPromises.push(promise);\n                                            }\n                                            continue;\n                                        }\n                                        var queryOptions = {\n                                            query: refetchQuery.query,\n                                            variables: refetchQuery.variables,\n                                            fetchPolicy: 'network-only',\n                                        };\n                                        if (refetchQuery.context) {\n                                            queryOptions.context = refetchQuery.context;\n                                        }\n                                        refetchQueryPromises.push(_this.query(queryOptions));\n                                    }\n                                    return Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                        _this.setQuery(mutationId, function () { return ({ document: null }); });\n                                        if (errorPolicy === 'ignore' &&\n                                            storeResult &&\n                                            graphQLResultHasError(storeResult)) {\n                                            delete storeResult.errors;\n                                        }\n                                        return storeResult;\n                                    });\n                                };\n                                var clientQuery = _this.localState.clientQuery(operation.query);\n                                var serverQuery = _this.localState.serverQuery(operation.query);\n                                if (serverQuery) {\n                                    operation.query = serverQuery;\n                                }\n                                var obs = serverQuery\n                                    ? execute(_this.link, operation)\n                                    : Observable.of({\n                                        data: {},\n                                    });\n                                var self = _this;\n                                var complete = false;\n                                var handlingNext = false;\n                                obs.subscribe({\n                                    next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                                        var updatedResult, context, variables;\n                                        return __generator(this, function (_a) {\n                                            switch (_a.label) {\n                                                case 0:\n                                                    handlingNext = true;\n                                                    if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                                        handlingNext = false;\n                                                        error = new ApolloError({\n                                                            graphQLErrors: result.errors,\n                                                        });\n                                                        return [2];\n                                                    }\n                                                    self.mutationStore.markMutationResult(mutationId);\n                                                    updatedResult = result;\n                                                    context = operation.context, variables = operation.variables;\n                                                    if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                                    return [4, self.localState\n                                                            .runResolvers({\n                                                            document: clientQuery,\n                                                            remoteResult: result,\n                                                            context: context,\n                                                            variables: variables,\n                                                        })\n                                                            .catch(function (error) {\n                                                            handlingNext = false;\n                                                            reject(error);\n                                                            return result;\n                                                        })];\n                                                case 1:\n                                                    updatedResult = _a.sent();\n                                                    _a.label = 2;\n                                                case 2:\n                                                    if (fetchPolicy !== 'no-cache') {\n                                                        self.dataStore.markMutationResult({\n                                                            mutationId: mutationId,\n                                                            result: updatedResult,\n                                                            document: mutation,\n                                                            variables: updatedVariables || {},\n                                                            updateQueries: generateUpdateQueriesInfo(),\n                                                            update: updateWithProxyFn,\n                                                        });\n                                                    }\n                                                    storeResult = updatedResult;\n                                                    handlingNext = false;\n                                                    if (complete) {\n                                                        completeMutation().then(resolve, reject);\n                                                    }\n                                                    return [2];\n                                            }\n                                        });\n                                    }); },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        self.dataStore.markMutationComplete({\n                                            mutationId: mutationId,\n                                            optimisticResponse: optimisticResponse,\n                                        });\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (!handlingNext) {\n                                            completeMutation().then(resolve, reject);\n                                        }\n                                        complete = true;\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, variables, _b, metadata, _c, fetchPolicy, _d, context, cache, query, updatedVariables, _e, updatedOptions, storeResult, needToFetch, _f, complete, result, shouldFetch, requestId, cancel, shouldDispatchClientResult, networkResult;\n            var _this = this;\n            return __generator(this, function (_g) {\n                switch (_g.label) {\n                    case 0:\n                        _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c, _d = options.context, context = _d === void 0 ? {} : _d;\n                        cache = this.dataStore.getCache();\n                        query = cache.transformDocument(options.query);\n                        if (!hasClientExports(query)) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        _e = _g.sent();\n                        return [3, 3];\n                    case 2:\n                        _e = variables;\n                        _g.label = 3;\n                    case 3:\n                        updatedVariables = _e;\n                        updatedOptions = __assign({}, options, { variables: updatedVariables });\n                        needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        if (fetchType !== FetchType.refetch &&\n                            fetchPolicy !== 'network-only' &&\n                            fetchPolicy !== 'no-cache') {\n                            _f = this.dataStore.getCache().diff({\n                                query: query,\n                                variables: updatedVariables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _f.complete, result = _f.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.generateRequestId();\n                        cancel = this.updateQueryWatch(queryId, query, updatedOptions);\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(true, fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: updatedVariables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        this.broadcastQueries();\n                        shouldDispatchClientResult = !shouldFetch || fetchPolicy === 'cache-and-network';\n                        if (shouldDispatchClientResult) {\n                            this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                            this.invalidate(true, queryId, fetchMoreForQueryId);\n                            this.broadcastQueries(this.localState.shouldForceResolvers(query));\n                        }\n                        if (shouldFetch) {\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: updatedOptions,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    var lastRequestId = _this.getQuery(queryId).lastRequestId;\n                                    if (requestId >= (lastRequestId || 1)) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(true, queryId, fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            else {\n                                networkResult.catch(function () { });\n                            }\n                        }\n                        return [2, Promise.resolve({ data: storeResult })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        var previouslyHadError = false;\n        return function (queryStoreValue, newData, forceResolvers) { return __awaiter(_this, void 0, void 0, function () {\n            var observableQuery, fetchPolicy, errorPolicy, lastResult, lastError, shouldNotifyIfLoading, networkStatusChanged, errorStatusChanged, apolloError_1, data, isMissing, document_1, readResult, resultFromStore, query, variables, context, updatedResult, e_1, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.invalidate(false, queryId);\n                        if (!queryStoreValue)\n                            return [2];\n                        observableQuery = this.getQuery(queryId).observableQuery;\n                        fetchPolicy = observableQuery\n                            ? observableQuery.options.fetchPolicy\n                            : options.fetchPolicy;\n                        if (fetchPolicy === 'standby')\n                            return [2];\n                        errorPolicy = observableQuery\n                            ? observableQuery.options.errorPolicy\n                            : options.errorPolicy;\n                        lastResult = observableQuery\n                            ? observableQuery.getLastResult()\n                            : null;\n                        lastError = observableQuery ? observableQuery.getLastError() : null;\n                        shouldNotifyIfLoading = (!newData && queryStoreValue.previousVariables != null) ||\n                            fetchPolicy === 'cache-only' ||\n                            fetchPolicy === 'cache-and-network';\n                        networkStatusChanged = Boolean(lastResult &&\n                            queryStoreValue.networkStatus !== lastResult.networkStatus);\n                        errorStatusChanged = errorPolicy &&\n                            (lastError && lastError.graphQLErrors) !==\n                                queryStoreValue.graphQLErrors &&\n                            errorPolicy !== 'none';\n                        if (!(!isNetworkRequestInFlight(queryStoreValue.networkStatus) ||\n                            (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                            shouldNotifyIfLoading)) return [3, 8];\n                        if (((!errorPolicy || errorPolicy === 'none') &&\n                            queryStoreValue.graphQLErrors &&\n                            queryStoreValue.graphQLErrors.length > 0) ||\n                            queryStoreValue.networkError) {\n                            apolloError_1 = new ApolloError({\n                                graphQLErrors: queryStoreValue.graphQLErrors,\n                                networkError: queryStoreValue.networkError,\n                            });\n                            previouslyHadError = true;\n                            if (observer.error) {\n                                try {\n                                    observer.error(apolloError_1);\n                                }\n                                catch (e) {\n                                    setTimeout(function () {\n                                        throw e;\n                                    }, 0);\n                                }\n                            }\n                            else {\n                                setTimeout(function () {\n                                    throw apolloError_1;\n                                }, 0);\n                                if (process.env.NODE_ENV !== 'production') {\n                                    console.info('An unhandled error was thrown because no error handler is registered ' +\n                                        'for the query ' +\n                                        JSON.stringify(queryStoreValue.document));\n                                }\n                            }\n                            return [2];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, , 8]);\n                        data = void 0;\n                        isMissing = void 0;\n                        if (newData) {\n                            if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                                this.setQuery(queryId, function () { return ({ newData: null }); });\n                            }\n                            data = newData.result;\n                            isMissing = !newData.complete || false;\n                        }\n                        else {\n                            if (lastResult && lastResult.data && !errorStatusChanged) {\n                                data = lastResult.data;\n                                isMissing = false;\n                            }\n                            else {\n                                document_1 = this.getQuery(queryId).document;\n                                readResult = this.dataStore.getCache().diff({\n                                    query: document_1,\n                                    variables: queryStoreValue.previousVariables ||\n                                        queryStoreValue.variables,\n                                    optimistic: true,\n                                });\n                                data = readResult.result;\n                                isMissing = !readResult.complete;\n                            }\n                        }\n                        resultFromStore = void 0;\n                        if (isMissing && fetchPolicy !== 'cache-only') {\n                            resultFromStore = {\n                                data: lastResult && lastResult.data,\n                                loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                                networkStatus: queryStoreValue.networkStatus,\n                                stale: true,\n                            };\n                        }\n                        else {\n                            resultFromStore = {\n                                data: data,\n                                loading: isNetworkRequestInFlight(queryStoreValue.networkStatus),\n                                networkStatus: queryStoreValue.networkStatus,\n                                stale: false,\n                            };\n                        }\n                        if (errorPolicy === 'all' &&\n                            queryStoreValue.graphQLErrors &&\n                            queryStoreValue.graphQLErrors.length > 0) {\n                            resultFromStore.errors = queryStoreValue.graphQLErrors;\n                        }\n                        if (!observer.next) return [3, 6];\n                        if (!(previouslyHadError ||\n                            !observableQuery ||\n                            observableQuery.isDifferentFromLastResult(resultFromStore))) return [3, 6];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 5, , 6]);\n                        if (!forceResolvers) return [3, 4];\n                        query = options.query, variables = options.variables, context = options.context;\n                        return [4, this.localState.runResolvers({\n                                document: query,\n                                remoteResult: resultFromStore,\n                                context: context,\n                                variables: variables,\n                                onlyRunForcedResolvers: forceResolvers,\n                            })];\n                    case 3:\n                        updatedResult = _a.sent();\n                        resultFromStore = __assign({}, resultFromStore, updatedResult);\n                        _a.label = 4;\n                    case 4:\n                        observer.next(resultFromStore);\n                        return [3, 6];\n                    case 5:\n                        e_1 = _a.sent();\n                        setTimeout(function () {\n                            throw e_1;\n                        }, 0);\n                        return [3, 6];\n                    case 6:\n                        previouslyHadError = false;\n                        return [3, 8];\n                    case 7:\n                        error_1 = _a.sent();\n                        previouslyHadError = true;\n                        if (observer.error)\n                            observer.error(new ApolloError({ networkError: error_1 }));\n                        return [2];\n                    case 8: return [2];\n                }\n            });\n        }); };\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'standby') : invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        var queryDefinition = getQueryDefinition(options.query);\n        if (queryDefinition.variableDefinitions &&\n            queryDefinition.variableDefinitions.length) {\n            var defaultValues = getDefaultValues(queryDefinition);\n            options.variables = assign({}, defaultValues, options.variables);\n        }\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        return new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        process.env.NODE_ENV === \"production\" ? invariant(options.query) : invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        process.env.NODE_ENV === \"production\" ? invariant(options.query.kind === 'Document') : invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.returnPartialData) : invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        process.env.NODE_ENV === \"production\" ? invariant(!options.pollInterval) : invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        var queryId = this.idCounter.toString();\n        this.idCounter++;\n        return queryId;\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(true, queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var _b = _a.listeners, listeners = _b === void 0 ? [] : _b;\n            return ({\n                listeners: listeners.concat([listener]),\n                invalidated: false,\n            });\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.dataStore.getCache().watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n        var queryDef = getQueryDefinition(observableQuery.options.query);\n        if (queryDef.name && queryDef.name.value) {\n            var queryName = queryDef.name.value;\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName] || [];\n            this.queryIdsByName[queryName].push(observableQuery.queryId);\n        }\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var _a = this.getQuery(queryId), observableQuery = _a.observableQuery, cancel = _a.cancel;\n        if (cancel)\n            cancel();\n        if (!observableQuery)\n            return;\n        var definition = getQueryDefinition(observableQuery.options.query);\n        var queryName = definition.name ? definition.name.value : null;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (queryName) {\n            this.queryIdsByName[queryName] = this.queryIdsByName[queryName].filter(function (val) {\n                return !(observableQuery.queryId === val);\n            });\n        }\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new Error('Store reset while query was in flight(not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        var reset = this.dataStore.reset();\n        return reset;\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var observableQueryPromises = this.getObservableQueryPromises(includeStandby);\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.startQuery = function (queryId, options, listener) {\n        this.addQueryListener(queryId, listener);\n        this.fetchQuery(queryId, options)\n            .catch(function () { return undefined; });\n        return queryId;\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (options) {\n        var _this = this;\n        var query = options.query;\n        var isCacheEnabled = !(options.fetchPolicy && options.fetchPolicy === 'no-cache');\n        var cache = this.dataStore.getCache();\n        var transformedDoc = cache.transformDocument(query);\n        var variables = assign({}, getDefaultValues(getOperationDefinition(query)), options.variables);\n        var updatedVariables = variables;\n        var sub;\n        var observers = [];\n        var clientQuery = this.localState.clientQuery(transformedDoc);\n        return new Observable(function (observer) {\n            observers.push(observer);\n            if (observers.length === 1) {\n                var activeNextCalls_1 = 0;\n                var complete_1 = false;\n                var handler_1 = {\n                    next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                        var updatedResult;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    activeNextCalls_1 += 1;\n                                    updatedResult = result;\n                                    if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                    return [4, this.localState.runResolvers({\n                                            document: clientQuery,\n                                            remoteResult: result,\n                                            context: {},\n                                            variables: updatedVariables,\n                                        })];\n                                case 1:\n                                    updatedResult = _a.sent();\n                                    _a.label = 2;\n                                case 2:\n                                    if (isCacheEnabled) {\n                                        this.dataStore.markSubscriptionResult(updatedResult, transformedDoc, updatedVariables);\n                                        this.broadcastQueries();\n                                    }\n                                    observers.forEach(function (obs) {\n                                        if (graphQLResultHasError(updatedResult) && obs.error) {\n                                            obs.error(new ApolloError({\n                                                graphQLErrors: updatedResult.errors,\n                                            }));\n                                        }\n                                        else if (obs.next) {\n                                            obs.next(updatedResult);\n                                        }\n                                        activeNextCalls_1 -= 1;\n                                    });\n                                    if (activeNextCalls_1 === 0 && complete_1) {\n                                        handler_1.complete();\n                                    }\n                                    return [2];\n                            }\n                        });\n                    }); },\n                    error: function (error) {\n                        observers.forEach(function (obs) {\n                            if (obs.error) {\n                                obs.error(error);\n                            }\n                        });\n                    },\n                    complete: function () {\n                        if (activeNextCalls_1 === 0) {\n                            observers.forEach(function (obs) {\n                                if (obs.complete) {\n                                    obs.complete();\n                                }\n                            });\n                        }\n                        complete_1 = true;\n                    }\n                };\n                (function () { return __awaiter(_this, void 0, void 0, function () {\n                    var updatedVariables, _a, serverQuery, operation;\n                    return __generator(this, function (_b) {\n                        switch (_b.label) {\n                            case 0:\n                                if (!hasClientExports(transformedDoc)) return [3, 2];\n                                return [4, this.localState.addExportedVariables(transformedDoc, variables)];\n                            case 1:\n                                _a = _b.sent();\n                                return [3, 3];\n                            case 2:\n                                _a = variables;\n                                _b.label = 3;\n                            case 3:\n                                updatedVariables = _a;\n                                serverQuery = this.localState.serverQuery(transformedDoc);\n                                if (serverQuery) {\n                                    operation = this.buildOperationForLink(serverQuery, updatedVariables);\n                                    sub = execute(this.link, operation).subscribe(handler_1);\n                                }\n                                else {\n                                    sub = Observable.of({ data: {} }).subscribe(handler_1);\n                                }\n                                return [2];\n                        }\n                    });\n                }); })();\n            }\n            return function () {\n                observers = observers.filter(function (obs) { return obs !== observer; });\n                if (observers.length === 0 && sub) {\n                    sub.unsubscribe();\n                }\n            };\n        });\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        var subscriptions = this.getQuery(queryId).subscriptions;\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        else if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        else {\n            try {\n                var data = this.dataStore.getCache().read({\n                    query: query,\n                    variables: variables,\n                    previousResult: lastResult ? lastResult.data : undefined,\n                    optimistic: optimistic,\n                }) || undefined;\n                return { data: data, partial: false };\n            }\n            catch (e) {\n                return { data: undefined, partial: true };\n            }\n        }\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObserveableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            process.env.NODE_ENV === \"production\" ? invariant(foundObserveableQuery) : invariant(foundObserveableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObserveableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        var data = this.getCurrentQueryResult(observableQuery, false).data;\n        return {\n            previousResult: data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function (forceResolvers) {\n        var _this = this;\n        if (forceResolvers === void 0) { forceResolvers = false; }\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (!info.invalidated || !info.listeners)\n                return;\n            info.listeners\n                .filter(function (x) { return !!x; })\n                .forEach(function (listener) {\n                listener(_this.queryStore.get(id), info.newData, forceResolvers);\n            });\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableQueryPromises = function (includeStandby) {\n        var _this = this;\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (!observableQuery)\n                return;\n            var fetchPolicy = observableQuery.options.fetchPolicy;\n            observableQuery.resetLastResults();\n            if (fetchPolicy !== 'cache-only' &&\n                (includeStandby || fetchPolicy !== 'standby')) {\n                observableQueryPromises.push(observableQuery.refetch());\n            }\n            _this.setQuery(queryId, function () { return ({ newData: null }); });\n            _this.invalidate(true, queryId);\n        });\n        return observableQueryPromises;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, context = options.context, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var obs;\n            var updatedContext = {};\n            var clientQuery = _this.localState.clientQuery(document);\n            var serverQuery = _this.localState.serverQuery(document);\n            if (serverQuery) {\n                var operation = _this.buildOperationForLink(serverQuery, variables, __assign({}, context, { forceFetch: !_this.queryDeduplication }));\n                updatedContext = operation.context;\n                obs = execute(_this.deduplicator, operation);\n            }\n            else {\n                updatedContext = _this.prepareContext(context);\n                obs = Observable.of({ data: {} });\n            }\n            _this.fetchQueryRejectFns.set(\"fetchRequest:\" + queryId, reject);\n            var complete = false;\n            var handlingNext = true;\n            var subscriber = {\n                next: function (result) { return __awaiter(_this, void 0, void 0, function () {\n                    var updatedResult, lastRequestId;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                handlingNext = true;\n                                updatedResult = result;\n                                lastRequestId = this.getQuery(queryId).lastRequestId;\n                                if (!(requestId >= (lastRequestId || 1))) return [3, 3];\n                                if (!(clientQuery && hasDirectives(['client'], clientQuery))) return [3, 2];\n                                return [4, this.localState\n                                        .runResolvers({\n                                        document: clientQuery,\n                                        remoteResult: result,\n                                        context: updatedContext,\n                                        variables: variables,\n                                    })\n                                        .catch(function (error) {\n                                        handlingNext = false;\n                                        reject(error);\n                                        return result;\n                                    })];\n                            case 1:\n                                updatedResult = _a.sent();\n                                _a.label = 2;\n                            case 2:\n                                if (fetchPolicy !== 'no-cache') {\n                                    try {\n                                        this.dataStore.markQueryResult(updatedResult, document, variables, fetchMoreForQueryId, errorPolicy === 'ignore' || errorPolicy === 'all');\n                                    }\n                                    catch (e) {\n                                        handlingNext = false;\n                                        reject(e);\n                                        return [2];\n                                    }\n                                }\n                                else {\n                                    this.setQuery(queryId, function () { return ({\n                                        newData: { result: updatedResult.data, complete: true },\n                                    }); });\n                                }\n                                this.queryStore.markQueryResult(queryId, updatedResult, fetchMoreForQueryId);\n                                this.invalidate(true, queryId, fetchMoreForQueryId);\n                                this.broadcastQueries();\n                                _a.label = 3;\n                            case 3:\n                                if (updatedResult.errors && errorPolicy === 'none') {\n                                    handlingNext = false;\n                                    reject(new ApolloError({\n                                        graphQLErrors: updatedResult.errors,\n                                    }));\n                                    return [2];\n                                }\n                                else if (errorPolicy === 'all') {\n                                    errorsFromStore = updatedResult.errors;\n                                }\n                                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                                    resultFromStore = updatedResult.data;\n                                }\n                                else {\n                                    try {\n                                        resultFromStore = this.dataStore.getCache().read({\n                                            variables: variables,\n                                            query: document,\n                                            optimistic: false,\n                                        });\n                                    }\n                                    catch (e) { }\n                                }\n                                handlingNext = false;\n                                if (complete) {\n                                    subscriber.complete();\n                                }\n                                return [2];\n                        }\n                    });\n                }); },\n                error: function (error) {\n                    _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n                    _this.setQuery(queryId, function (_a) {\n                        var subscriptions = _a.subscriptions;\n                        return ({\n                            subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                        });\n                    });\n                    reject(error);\n                },\n                complete: function () {\n                    if (!handlingNext) {\n                        _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n                        _this.setQuery(queryId, function (_a) {\n                            var subscriptions = _a.subscriptions;\n                            return ({\n                                subscriptions: subscriptions.filter(function (x) { return x !== subscription; }),\n                            });\n                        });\n                        resolve({\n                            data: resultFromStore,\n                            errors: errorsFromStore,\n                            loading: false,\n                            networkStatus: NetworkStatus.ready,\n                            stale: false,\n                        });\n                    }\n                    complete = true;\n                },\n            };\n            var subscription = obs.subscribe(subscriber);\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                return ({\n                    subscriptions: subscriptions.concat([subscription]),\n                });\n            });\n        }).catch(function (error) {\n            _this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n            throw error;\n        });\n    };\n    QueryManager.prototype.refetchQueryByName = function (queryName) {\n        var _this = this;\n        var refetchedQueries = this.queryIdsByName[queryName];\n        if (refetchedQueries === undefined)\n            return;\n        return Promise.all(refetchedQueries\n            .map(function (id) { return _this.getQuery(id).observableQuery; })\n            .filter(function (x) { return !!x; })\n            .map(function (x) { return x.refetch(); }));\n    };\n    QueryManager.prototype.generateRequestId = function () {\n        var requestId = this.idCounter;\n        this.idCounter++;\n        return requestId;\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: [],\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: null,\n            observableQuery: null,\n            subscriptions: [],\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign({}, prev, updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (invalidated, queryId, fetchMoreForQueryId) {\n        if (queryId)\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        if (fetchMoreForQueryId) {\n            this.setQuery(fetchMoreForQueryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.buildOperationForLink = function (document, variables, extraContext) {\n        var cache = this.dataStore.getCache();\n        return {\n            query: cache.transformForLink\n                ? cache.transformForLink(document)\n                : document,\n            variables: variables,\n            operationName: getOperationName(document) || undefined,\n            context: this.prepareContext(extraContext),\n        };\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign({}, newContext, { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var pollInterval = options.pollInterval;\n        process.env.NODE_ENV === \"production\" ? invariant(pollInterval) : invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            this.pollingInfoByQueryId.set(queryId, {\n                interval: pollInterval,\n                lastPollTimeMs: Date.now() - 10,\n                options: __assign({}, options, { fetchPolicy: 'network-only' }),\n            });\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            this.schedulePoll(pollInterval);\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    QueryManager.prototype.schedulePoll = function (timeLimitMs) {\n        var _this = this;\n        var now = Date.now();\n        if (this.nextPoll) {\n            if (timeLimitMs < this.nextPoll.time - now) {\n                clearTimeout(this.nextPoll.timeout);\n            }\n            else {\n                return;\n            }\n        }\n        this.nextPoll = {\n            time: now + timeLimitMs,\n            timeout: setTimeout(function () {\n                _this.nextPoll = null;\n                var nextTimeLimitMs = Infinity;\n                _this.pollingInfoByQueryId.forEach(function (info, queryId) {\n                    if (info.interval < nextTimeLimitMs) {\n                        nextTimeLimitMs = info.interval;\n                    }\n                    if (!_this.checkInFlight(queryId)) {\n                        if (Date.now() - info.lastPollTimeMs >= info.interval) {\n                            var updateLastPollTime = function () {\n                                info.lastPollTimeMs = Date.now();\n                            };\n                            _this.fetchQuery(queryId, info.options, FetchType.poll).then(updateLastPollTime, updateLastPollTime);\n                        }\n                    }\n                });\n                if (isFinite(nextTimeLimitMs)) {\n                    _this.schedulePoll(nextTimeLimitMs);\n                }\n            }, timeLimitMs),\n        };\n    };\n    return QueryManager;\n}());\n\nvar DataStore = (function () {\n    function DataStore(initialCache) {\n        this.cache = initialCache;\n    }\n    DataStore.prototype.getCache = function () {\n        return this.cache;\n    };\n    DataStore.prototype.markQueryResult = function (result, document, variables, fetchMoreForQueryId, ignoreErrors) {\n        if (ignoreErrors === void 0) { ignoreErrors = false; }\n        var writeWithErrors = !graphQLResultHasError(result);\n        if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n            writeWithErrors = true;\n        }\n        if (!fetchMoreForQueryId && writeWithErrors) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_QUERY',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markSubscriptionResult = function (result, document, variables) {\n        if (!graphQLResultHasError(result)) {\n            this.cache.write({\n                result: result.data,\n                dataId: 'ROOT_SUBSCRIPTION',\n                query: document,\n                variables: variables,\n            });\n        }\n    };\n    DataStore.prototype.markMutationInit = function (mutation) {\n        var _this = this;\n        if (mutation.optimisticResponse) {\n            var optimistic_1;\n            if (typeof mutation.optimisticResponse === 'function') {\n                optimistic_1 = mutation.optimisticResponse(mutation.variables);\n            }\n            else {\n                optimistic_1 = mutation.optimisticResponse;\n            }\n            var changeFn_1 = function () {\n                _this.markMutationResult({\n                    mutationId: mutation.mutationId,\n                    result: { data: optimistic_1 },\n                    document: mutation.document,\n                    variables: mutation.variables,\n                    updateQueries: mutation.updateQueries,\n                    update: mutation.update,\n                });\n            };\n            this.cache.recordOptimisticTransaction(function (c) {\n                var orig = _this.cache;\n                _this.cache = c;\n                try {\n                    changeFn_1();\n                }\n                finally {\n                    _this.cache = orig;\n                }\n            }, mutation.mutationId);\n        }\n    };\n    DataStore.prototype.markMutationResult = function (mutation) {\n        var _this = this;\n        if (!graphQLResultHasError(mutation.result)) {\n            var cacheWrites_1 = [];\n            cacheWrites_1.push({\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            });\n            if (mutation.updateQueries) {\n                Object.keys(mutation.updateQueries)\n                    .filter(function (id) { return mutation.updateQueries[id]; })\n                    .forEach(function (queryId) {\n                    var _a = mutation.updateQueries[queryId], query = _a.query, updater = _a.updater;\n                    var _b = _this.cache.diff({\n                        query: query.document,\n                        variables: query.variables,\n                        returnPartialData: true,\n                        optimistic: false,\n                    }), currentQueryResult = _b.result, complete = _b.complete;\n                    if (!complete) {\n                        return;\n                    }\n                    var nextQueryResult = tryFunctionOrLogError(function () {\n                        return updater(currentQueryResult, {\n                            mutationResult: mutation.result,\n                            queryName: getOperationName(query.document) || undefined,\n                            queryVariables: query.variables,\n                        });\n                    });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                });\n            }\n            this.cache.performTransaction(function (c) {\n                cacheWrites_1.forEach(function (write) { return c.write(write); });\n            });\n            var update_1 = mutation.update;\n            if (update_1) {\n                this.cache.performTransaction(function (c) {\n                    tryFunctionOrLogError(function () { return update_1(c, mutation.result); });\n                });\n            }\n        }\n    };\n    DataStore.prototype.markMutationComplete = function (_a) {\n        var mutationId = _a.mutationId, optimisticResponse = _a.optimisticResponse;\n        if (!optimisticResponse)\n            return;\n        this.cache.removeOptimistic(mutationId);\n    };\n    DataStore.prototype.markUpdateQueryResult = function (document, variables, newResult) {\n        this.cache.write({\n            result: newResult,\n            dataId: 'ROOT_QUERY',\n            variables: variables,\n            query: document,\n        });\n    };\n    DataStore.prototype.reset = function () {\n        return this.cache.reset();\n    };\n    return DataStore;\n}());\n\nvar version = \"2.5.1\";\n\nvar hasSuggestedDevtools = false;\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        this.clientAwareness = {};\n        var cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, connectToDevTools = options.connectToDevTools, _c = options.queryDeduplication, queryDeduplication = _c === void 0 ? true : _c, defaultOptions = options.defaultOptions, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link && resolvers) {\n            link = ApolloLink.empty();\n        }\n        if (!link || !cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError() : new InvariantError(\"\\n        In order to initialize Apollo Client, you must specify link & cache properties on the config object.\\n        This is part of the required upgrade when migrating from Apollo Client 1.0 to Apollo Client 2.0.\\n        For more information, please visit:\\n          https://www.apollographql.com/docs/react/basics/setup.html\\n        to help you get started.\\n      \");\n        }\n        var supportedCache = new Map();\n        var supportedDirectives = new ApolloLink(function (operation, forward) {\n            var result = supportedCache.get(operation.query);\n            if (!result) {\n                result = removeConnectionDirectiveFromDocument(operation.query);\n                supportedCache.set(operation.query, result);\n                supportedCache.set(result, result);\n            }\n            operation.query = result;\n            return forward(operation);\n        });\n        this.link = supportedDirectives.concat(link);\n        this.cache = cache;\n        this.store = new DataStore(cache);\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.ssrMode = ssrMode;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        var defaultConnectToDevTools = process.env.NODE_ENV !== 'production' &&\n            typeof window !== 'undefined' &&\n            !window.__APOLLO_CLIENT__;\n        if (typeof connectToDevTools === 'undefined'\n            ? defaultConnectToDevTools\n            : connectToDevTools && typeof window !== 'undefined') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self) {\n                if (typeof window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n                    if (window.navigator &&\n                        window.navigator.userAgent &&\n                        window.navigator.userAgent.indexOf('Chrome') > -1) {\n                        console.debug('Download the Apollo DevTools ' +\n                            'for a better development experience: ' +\n                            'https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm');\n                    }\n                }\n            }\n        }\n        this.version = version;\n        if (clientAwarenessName) {\n            this.clientAwareness.name = clientAwarenessName;\n        }\n        if (clientAwarenessVersion) {\n            this.clientAwareness.version = clientAwarenessVersion;\n        }\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        if (this.queryManager) {\n            this.queryManager.stop();\n        }\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = __assign({}, this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = __assign({}, this.defaultOptions.query, options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network') : invariant(options.fetchPolicy !== 'cache-and-network', 'cache-and-network fetchPolicy can only be used with watchQuery');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign({}, options, { fetchPolicy: 'cache-first' });\n        }\n        return this.initQueryManager().query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = __assign({}, this.defaultOptions.mutate, options);\n        }\n        return this.initQueryManager().mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.initQueryManager().startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.initProxy().readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        var result = this.initProxy().writeQuery(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        var result = this.initProxy().writeFragment(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.writeData = function (options) {\n        var result = this.initProxy().writeData(options);\n        this.initQueryManager().broadcastQueries();\n        return result;\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.initQueryManager = function () {\n        var _this = this;\n        if (!this.queryManager) {\n            this.queryManager = new QueryManager({\n                link: this.link,\n                store: this.store,\n                queryDeduplication: this.queryDeduplication,\n                ssrMode: this.ssrMode,\n                clientAwareness: this.clientAwareness,\n                localState: this.localState,\n                onBroadcast: function () {\n                    if (_this.devToolsHookCb) {\n                        _this.devToolsHookCb({\n                            action: {},\n                            state: {\n                                queries: _this.queryManager\n                                    ? _this.queryManager.queryStore.getStore()\n                                    : {},\n                                mutations: _this.queryManager\n                                    ? _this.queryManager.mutationStore.getStore()\n                                    : {},\n                            },\n                            dataWithOptimisticResults: _this.cache.extract(true),\n                        });\n                    }\n                },\n            });\n        }\n        return this.queryManager;\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            return _this.queryManager\n                ? _this.queryManager.clearStore()\n                : Promise.resolve(null);\n        })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return _this.queryManager && _this.queryManager.reFetchObservableQueries\n                ? _this.queryManager.reFetchObservableQueries()\n                : Promise.resolve(null);\n        });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        var queryManager = this.queryManager;\n        return Promise.resolve()\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () {\n            return queryManager ? queryManager.clearStore() : Promise.resolve(null);\n        });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager\n            ? this.queryManager.reFetchObservableQueries(includeStandby)\n            : Promise.resolve(null);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.initProxy().extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.initProxy().restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.initProxy = function () {\n        if (!this.proxy) {\n            this.initQueryManager();\n            this.proxy = this.cache;\n        }\n        return this.proxy;\n    };\n    return ApolloClient;\n}());\n\nexport default ApolloClient;\nexport { ApolloClient, ObservableQuery, NetworkStatus, isApolloError, ApolloError, FetchType };\n//# sourceMappingURL=bundle.esm.js.map\n"],"names":["NetworkStatus","__extends","Observable$1","FetchType","__assign","cloneDeep","isEqual","invariant","tryFunctionOrLogError","InvariantError","mergeDeep","__awaiter","__generator","hasDirectives","removeClientSetsFromDocument","visit","BREAK","buildQueryFromSelectionSet","getMainDefinition","getFragmentDefinitions","createFragmentMap","shouldInclude","isField","resultKeyNameFromField","isInlineFragment","mergeDeepArray","argumentsObjectFromField","ApolloLink","DedupLink","assign","getDefaultValues","getMutationDefinition","hasClientExports","graphQLResultHasError","execute","getQueryDefinition","getOperationDefinition","getOperationName","removeConnectionDirectiveFromDocument"],"mappings":"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"}