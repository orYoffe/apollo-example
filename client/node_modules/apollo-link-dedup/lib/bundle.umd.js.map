{"version":3,"file":"bundle.umd.js","sources":["../src/dedupLink.ts"],"sourcesContent":["import {\n  ApolloLink,\n  Operation,\n  NextLink,\n  FetchResult,\n  Observable,\n} from 'apollo-link';\n\n/*\n * Expects context to contain the forceFetch field if no dedup\n */\nexport class DedupLink extends ApolloLink {\n  private inFlightRequestObservables: Map<\n    string,\n    Observable<FetchResult>\n  > = new Map();\n  private subscribers: Map<string, any> = new Map();\n\n  public request(\n    operation: Operation,\n    forward: NextLink,\n  ): Observable<FetchResult> {\n    // sometimes we might not want to deduplicate a request, for example when we want to force fetch it.\n    if (operation.getContext().forceFetch) {\n      return forward(operation);\n    }\n\n    const key = operation.toKey();\n\n    const cleanup = operationKey => {\n      this.inFlightRequestObservables.delete(operationKey);\n      const prev = this.subscribers.get(operationKey);\n      return prev;\n    };\n\n    if (!this.inFlightRequestObservables.get(key)) {\n      // this is a new request, i.e. we haven't deduplicated it yet\n      // call the next link\n      const singleObserver = forward(operation);\n      let subscription;\n\n      const sharedObserver = new Observable(observer => {\n        // this will still be called by each subscriber regardless of\n        // deduplication status\n        let prev = this.subscribers.get(key);\n        if (!prev) prev = { next: [], error: [], complete: [] };\n\n        this.subscribers.set(key, {\n          next: prev.next.concat([observer.next.bind(observer)]),\n          error: prev.error.concat([observer.error.bind(observer)]),\n          complete: prev.complete.concat([observer.complete.bind(observer)]),\n        });\n\n        if (!subscription) {\n          subscription = singleObserver.subscribe({\n            next: result => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) {\n                previous.next.forEach(next => next(result));\n                previous.complete.forEach(complete => complete());\n              }\n            },\n            error: error => {\n              const previous = cleanup(key);\n              this.subscribers.delete(key);\n              if (previous) previous.error.forEach(err => err(error));\n            },\n          });\n        }\n\n        return () => {\n          if (subscription) subscription.unsubscribe();\n          this.inFlightRequestObservables.delete(key);\n        };\n      });\n\n      this.inFlightRequestObservables.set(key, sharedObserver);\n    }\n\n    // return shared Observable\n    return this.inFlightRequestObservables.get(key);\n  }\n}\n"],"names":["tslib_1.__extends","Observable","ApolloLink"],"mappings":"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"}